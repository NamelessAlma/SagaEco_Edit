using System;
using System.Collections.Generic;
using System.Text;

using SagaDB.Item;
using SagaDB.Actor;
using SagaMap.Scripting;

using SagaLib;
using SagaScript.Chinese.Enums;
namespace SagaScript
{
    public class P10000469 : RandomPortal
    {
        public P10000469()
        {
            Init(10000469, 10001000, 90, 2, 93, 4);
        }
    }
    //原始地圖:北方高原(10049000)
    //目標地圖:北方海角(10001000)
    //目標坐標:(90,2) ~ (93,4)

    public class P10000470 : RandomPortal
    {
        public P10000470()
        {
            Init(10000470, 10050000, 52, 251, 55, 253);
        }
    }
    //原始地圖:北方高原(10049000)
    //目標地圖:北方中央山脈(10050000)
    //目標坐標:(52,251) ~ (55,253)

    public class P10000471 : RandomPortal
    {
        public P10000471()
        {
            Init(10000471, 10049000, 55, 2, 58, 4);
        }
    }
    //原始地圖:北方中央山脈(10050000)
    //目標地圖:北方高原(10049000)
    //目標坐標:(55,2) ~ (58,4)

    public class P10000472 : RandomPortal
    {
        public P10000472()
        {
            Init(10000472, 10050000, 194, 251, 197, 253);
        }
    }
    //原始地圖:北方高原(10049000)
    //目標地圖:北方中央山脈(10050000)
    //目標坐標:(194,251) ~ (197,253)

    public class P10000473 : RandomPortal
    {
        public P10000473()
        {
            Init(10000473, 10049000, 194, 2, 197, 4);
        }
    }
    //原始地圖:北方中央山脈(10050000)
    //目標地圖:北方高原(10049000)
    //目標坐標:(194,2) ~ (197,4)

    public class P10000474 : RandomPortal
    {
        public P10000474()
        {
            Init(10000474, 10065000, 49, 195, 54, 197);
        }
    }
    //原始地圖:北方中央山脈(10050000)
    //目標地圖:諾頓海濱長廊(10065000)
    //目標坐標:(49,195) ~ (54,197)

    public class P10000476 : RandomPortal
    {
        public P10000476()
        {
            Init(10000476, 10051000, 251, 119, 253, 122);
        }
    }
    //原始地圖:北方中央山脈(10050000)
    //目標地圖:永恆之北部極地(10051000)
    //目標坐標:(251,119) ~ (253,122)

    public class P10000477 : RandomPortal
    {
        public P10000477()
        {
            Init(10000477, 10050000, 2, 120, 4, 123);
        }
    }
    //原始地圖:永恆之北部極地(10051000)
    //目標地圖:北方中央山脈(10050000)
    //目標坐標:(2,120) ~ (4,123)

    public class P10000478 : RandomPortal
    {
        public P10000478()
        {
            Init(10000478, 10051000, 251, 37, 253, 40);
        }
    }
    //原始地圖:北方中央山脈(10050001)
    //目標地圖:永恆之北部極地(10051000)
    //目標坐標:(251,37) ~ (253,40)

    public class P10000479 : RandomPortal
    {
        public P10000479()
        {
            Init(10000479, 10050001, 2, 36, 4, 39);
        }
    }
    //原始地圖:永恆之北部極地(10051000)
    //目標地圖:北方中央山脈(10050001)
    //目標坐標:(2,36) ~ (4,39)

    public class P10000480 : RandomPortal
    {
        public P10000480()
        {
            Init(10000480, 20015000, 8, 6, 11, 8);
        }
    }
    //原始地圖:永恆之北部極地(10051000)
    //目標地圖:愛伊斯島之地下通道(20015000)
    //目標坐標:(8,6) ~ (11,8)

    public class P10000481 : RandomPortal
    {
        public P10000481()
        {
            Init(10000481, 10051000, 95, 122, 97, 125);
        }
    }
    //原始地圖:愛伊斯島之地下通道(20015000)
    //目標地圖:永恆之北部極地(10051000)
    //目標坐標:(95,122) ~ (97,125)

    public class P10000482 : RandomPortal
    {
        public P10000482()
        {
            Init(10000482, 10051100, 62, 150, 64, 153);
        }
    }
    //原始地圖:愛伊斯島之地下通道(20015000)
    //目標地圖:愛伊斯島(10051100)
    //目標坐標:(62,150) ~ (64,153)


    public class S10000483 : Event
    {
        public S10000483()
        {
            this.EventID = 10000483;
        }

        public override void OnEvent(ActorPC pc)
        {
            //Init(10000483, 10051000, 95, 122, 97, 125);
            BitMask<AYSD> mask = pc.CMask["AYSD"];
            mask.SetValue(AYSD.回答水晶的狀況, false);
            Warp(pc, 10051000, 96, 123);
        }
    }
    //原始地圖:愛伊斯島(10051100)
    //目標地圖:永恆之北部極地(10051000)
    //目標坐標:(95,122) ~ (97,125)

    public class P10000485 : RandomPortal
    {
        public P10000485()
        {
            Init(10000485, 10050001, 226, 134, 229, 136);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北方中央山脈(10050001)
    //目標坐標:(226,134) ~ (229,136)

    public class P10000486 : RandomPortal
    {
        public P10000486()
        {
            Init(10000486, 20014000, 88, 88, 90, 90);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(88,88) ~ (90,90)

    public class P10000487 : RandomPortal
    {
        public P10000487()
        {
            Init(10000487, 20014000, 117, 116, 119, 118);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(117,116) ~ (119,118)

    public class P10000488 : RandomPortal
    {
        public P10000488()
        {
            Init(10000488, 20014000, 114, 156, 117, 157);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(114,156) ~ (117,157)

    public class P10000489 : RandomPortal
    {
        public P10000489()
        {
            Init(10000489, 20014000, 114, 138, 117, 139);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(114,138) ~ (117,139)

    public class P10000490 : RandomPortal
    {
        public P10000490()
        {
            Init(10000490, 20014000, 165, 164, 167, 166);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(165,164) ~ (167,166)

    public class P10000491 : RandomPortal
    {
        public P10000491()
        {
            Init(10000491, 20014000, 136, 137, 138, 139);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(136,137) ~ (138,139)

    public class P10000493 : RandomPortal
    {
        public P10000493()
        {
            Init(10000493, 20013100, 62, 57, 65, 58);
        }
    }
    //原始地圖:永恆之北部極地(10051000)
    //目標地圖:永恆深淵聳立的門(20013100)
    //目標坐標:(62,57) ~ (65,58)

    public class P10000494 : RandomPortal
    {
        public P10000494()
        {
            Init(10000494, 10051000, 119, 58, 121, 61);
        }
    }
    //原始地圖:永恆深淵聳立的門(20013100)
    //目標地圖:永恆之北部極地(10051000)
    //目標坐標:(119,58) ~ (121,61)\

    public class P10000636 : RandomPortal
    {
        public P10000636()
        {
            Init(10000636, 30171000, 3, 6, 3, 6);
        }
    }
    //原始地圖:北方中央山脈(10050001)
    //目標地圖:伊戈路雜貨商人(30171000)
    //目標坐標:(3,6) ~ (3,6)

    public class P10000637 : RandomPortal
    {
        public P10000637()
        {
            Init(10000637, 10050001, 222, 134, 222, 134);
        }
    }
    //原始地圖:伊戈路雜貨商人(30171000)
    //目標地圖:北方中央山脈(10050001)
    //目標坐標:(222,134) ~ (222,134)


    public class S10000638 : Event
    {
        public S10000638()
        {
            this.EventID = 10000638;
        }

        public override void OnEvent(ActorPC pc)
        {
            BitMask<Job2X_12> Job2X_12_mask = pc.CMask["Job2X_12"];

            if (Job2X_12_mask.Test(Job2X_12.收集解毒果) && !Job2X_12_mask.Test(Job2X_12.給予解毒果))
            {
                Warp(pc, 30170001, 3, 6);
                return;
            }

            Warp(pc, 30170000, 3, 6);
        }
    }
    //原始地圖:永恆之北部極地(10051000)
    //目標地圖:伊戈路(30170000)
    //目標坐標:(3,6) ~ (3,6)

    public class P10000639 : RandomPortal
    {
        public P10000639()
        {
            Init(10000639, 10051000, 164, 128, 166, 129);
        }
    }
    //原始地圖:伊戈路(30170000)
    //目標地圖:永恆之北部極地(10051000)
    //目標坐標:(164,128) ~ (166,129)

    public class P10000640 : RandomPortal
    {
        public P10000640()
        {
            Init(10000640, 30171001, 3, 6, 3, 6);
        }
    }
    //原始地圖:北部地牢(20014000)
    //目標地圖:伊戈路雜貨商人(30171001)
    //目標坐標:(3,6) ~ (3,6)

    public class P10000641 : RandomPortal
    {
        public P10000641()
        {
            Init(10000641, 20014000, 14, 160, 14, 160);
        }
    }
    //原始地圖:伊戈路雜貨商人(30171001)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(14,160) ~ (14,160)
    public class P10001097 : Event
    {
        public P10001097()
        {
            this.EventID = 10001097;
        }

        public override void OnEvent(ActorPC pc)
        {
            Say(pc, 131, "好像進不去呢.", " ");
        }
    }
    /*
    public class P10001097 : RandomPortal
    {
        public P10001097()
        {
            Init(10001097, 50022000, 3, 6, 3, 6);
        }
    }//*/
    //原始地圖:北部地牢(20014000)
    //目標地圖:空置小屋(50022000)
    //目標坐標:(3,6) ~ (3,6)

    public class P10001098 : RandomPortal
    {
        public P10001098()
        {
            Init(10001098, 20014000, 22, 160, 22, 160);
        }
    }
    //原始地圖:空置小屋(50022000)
    //目標地圖:北部地牢(20014000)
    //目標坐標:(22,160) ~ (22,160)
    public class S10000700 : Event
    {
        public S10000700()
        {
            this.EventID = 10000700;
        }

        public override void OnEvent(ActorPC pc)
        {
            BitMask<Neko_06> Neko_06_amask = pc.AMask["Neko_06"];
            BitMask<Neko_06> Neko_06_cmask = pc.CMask["Neko_06"];

            if (Neko_06_amask.Test(Neko_06.杏子任务开始) &&
                !Neko_06_amask.Test(Neko_06.获得杏子) &&
                Neko_06_cmask.Test(Neko_06.尋找阿伊斯) &&
                CountItem(pc, 10011001) > 0)
            {
                ShowEffect(pc, 4023);
                Wait(pc, 990);
                Warp(pc, 20015000, 11, 36);
                return;
            }

            if (CountItem(pc, 10011000) == 0)
            {
                ShowEffect(pc, 9571);
                Wait(pc, 1000);
                Say(pc, 131, "…??$R;" +
                    "有看不見的牆，$R進不去呀$R;");
                return;
            }
            ShowEffect(pc, 4023);
            Wait(pc, 1000);
            //Init(10000700, 20015000, 7, 36, 12, 36);
            Warp(pc, 20015000, 9, 36);
        }
    }
    //原始地圖:愛伊斯島之地下通道(20015000)
    //目標地圖:愛伊斯島之地下通道(20015000)
    //目標坐標:(7,36) ~ (12,36)
}